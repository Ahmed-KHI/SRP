name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Create necessary directories
      run: |
        mkdir -p uploads results
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create test environment file
      run: |
        echo "GEMINI_API_KEY=test_key" > .env
        echo "FLASK_ENV=testing" >> .env
        
    - name: Run basic import tests
      run: |
        python -c "
        import sys
        sys.path.append('src')
        print('✅ Python path configured')
        
        try:
            from src.utils.config import Config
            print('✅ Config imports successfully')
        except Exception as e:
            print(f'⚠️ Config import warning: {e}')
        
        try:
            import app
            print('✅ App imports successfully')
        except Exception as e:
            print(f'❌ App import failed: {e}')
            sys.exit(1)
        "

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
